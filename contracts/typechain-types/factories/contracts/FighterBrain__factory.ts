/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FighterBrain,
  FighterBrainInterface,
} from "../../contracts/FighterBrain";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "weightsURI",
        type: "string",
      },
    ],
    name: "BrainMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "weightsURI",
        type: "string",
      },
    ],
    name: "BrainUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "weightsURI",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "weightsURI",
        type: "string",
      },
    ],
    name: "mintSelf",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "weightsURI",
        type: "string",
      },
    ],
    name: "setWeightsURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "weightsURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336040518060400160405280601081526020016f22bb37a0b932b730902334b3b43a32b960811b81525060405180604001604052806005815260200164212920a4a760d91b81525081600090816200006b9190620001b7565b5060016200007a8282620001b7565b5050506001600160a01b038116620000ac57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000b781620000be565b5062000283565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013b57607f821691505b6020821081036200015c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b2576000816000526020600020601f850160051c810160208610156200018d5750805b601f850160051c820191505b81811015620001ae5782815560010162000199565b5050505b505050565b81516001600160401b03811115620001d357620001d362000110565b620001eb81620001e4845462000126565b8462000162565b602080601f8311600181146200022357600084156200020a5750858301515b600019600386901b1c1916600185901b178555620001ae565b600085815260208120601f198616915b82811015620002545788860151825594840194600190910190840162000233565b5085821015620002735787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6115ab80620002936000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063a91dcd171161007c578063a91dcd1714610276578063b88d4fde14610289578063c87b56dd1461029c578063d0def521146102af578063e985e9c5146102c2578063f2fde38b146102d557600080fd5b8063715018a61461023957806375794a3c146102415780638da5cb5b1461024a57806395d89b411461025b578063a22cb4651461026357600080fd5b806323b872dd116100ff57806323b872dd146101cc57806342842e0e146101df57806347c4a7ae146101f25780636352211e1461020557806370a082311461021857600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a45780631727c49b146101b9575b600080fd5b61014f61014a366004611002565b6102e8565b60405190151581526020015b60405180910390f35b61016c61033a565b60405161015b919061106f565b61018c610187366004611082565b6103cc565b6040516001600160a01b03909116815260200161015b565b6101b76101b23660046110b7565b6103f5565b005b61016c6101c7366004611082565b610404565b6101b76101da3660046110e1565b6104a6565b6101b76101ed3660046110e1565b610536565b6101b76102003660046111c9565b610556565b61018c610213366004611082565b61060b565b61022b610226366004611210565b610616565b60405190815260200161015b565b6101b761065e565b61022b60075481565b6006546001600160a01b031661018c565b61016c610672565b6101b761027136600461122b565b610681565b61022b610284366004611267565b61068c565b6101b761029736600461129c565b61070e565b61016c6102aa366004611082565b610726565b61022b6102bd366004611318565b61079b565b61014f6102d0366004611350565b610826565b6101b76102e3366004611210565b610854565b60006001600160e01b031982166380ac58cd60e01b148061031957506001600160e01b03198216635b5e139f60e01b145b8061033457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461034990611383565b80601f016020809104026020016040519081016040528092919081815260200182805461037590611383565b80156103c25780601f10610397576101008083540402835291602001916103c2565b820191906000526020600020905b8154815290600101906020018083116103a557829003601f168201915b5050505050905090565b60006103d782610892565b506000828152600460205260409020546001600160a01b0316610334565b6104008282336108cb565b5050565b600081815260086020526040902080546060919061042190611383565b80601f016020809104026020016040519081016040528092919081815260200182805461044d90611383565b801561049a5780601f1061046f5761010080835404028352916020019161049a565b820191906000526020600020905b81548152906001019060200180831161047d57829003601f168201915b50505050509050919050565b6001600160a01b0382166104d557604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006104e28383336108d8565b9050836001600160a01b0316816001600160a01b031614610530576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016104cc565b50505050565b6105518383836040518060200160405280600081525061070e565b505050565b600082815260026020526040902054610579906001600160a01b031633846109d1565b6105b65760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016104cc565b60008281526008602052604090206105ce8282611405565b50817f77d09b3ebdedf2b5b6bf8939afc2758c9635d83aaed642b731644258d9faac29826040516105ff919061106f565b60405180910390a25050565b600061033482610892565b60006001600160a01b038216610642576040516322718ad960e21b8152600060048201526024016104cc565b506001600160a01b031660009081526003602052604090205490565b610666610a37565b6106706000610a64565b565b60606001805461034990611383565b610400338383610ab6565b600060076000815461069d906114c5565b918290555090506106ae3382610b55565b60008181526008602052604090206106c68382611405565b50336001600160a01b0316817f4a8b9de44eb9edc9aaba33fc3f29be6cb913af7cab54d1dc5289063a3d93963084604051610701919061106f565b60405180910390a3919050565b6107198484846104a6565b6105303385858585610b6f565b606061073182610892565b50600061074960408051602081019091526000815290565b905060008151116107695760405180602001604052806000815250610794565b8061077384610c9a565b6040516020016107849291906114ec565b6040516020818303038152906040525b9392505050565b60006107a5610a37565b6007600081546107b4906114c5565b918290555090506107c58382610b55565b60008181526008602052604090206107dd8382611405565b50826001600160a01b0316817f4a8b9de44eb9edc9aaba33fc3f29be6cb913af7cab54d1dc5289063a3d93963084604051610818919061106f565b60405180910390a392915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61085c610a37565b6001600160a01b03811661088657604051631e4fbdf760e01b8152600060048201526024016104cc565b61088f81610a64565b50565b6000818152600260205260408120546001600160a01b03168061033457604051637e27328960e01b8152600481018490526024016104cc565b6105518383836001610d2d565b6000828152600260205260408120546001600160a01b039081169083161561090557610905818486610e33565b6001600160a01b0381161561094357610922600085600080610d2d565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610972576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b60006001600160a01b03831615801590610a2f5750826001600160a01b0316846001600160a01b03161480610a0b5750610a0b8484610826565b80610a2f57506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6006546001600160a01b031633146106705760405163118cdaa760e01b81523360048201526024016104cc565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610ae857604051630b61174360e31b81526001600160a01b03831660048201526024016104cc565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610400828260405180602001604052806000815250610e97565b6001600160a01b0383163b15610c9357604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610bb190889088908790879060040161151b565b6020604051808303816000875af1925050508015610bec575060408051601f3d908101601f19168201909252610be991810190611558565b60015b610c55573d808015610c1a576040519150601f19603f3d011682016040523d82523d6000602084013e610c1f565b606091505b508051600003610c4d57604051633250574960e11b81526001600160a01b03851660048201526024016104cc565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610c9157604051633250574960e11b81526001600160a01b03851660048201526024016104cc565b505b5050505050565b60606000610ca783610eaf565b600101905060008167ffffffffffffffff811115610cc757610cc761111d565b6040519080825280601f01601f191660200182016040528015610cf1576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610cfb57509392505050565b8080610d4157506001600160a01b03821615155b15610e03576000610d5184610892565b90506001600160a01b03831615801590610d7d5750826001600160a01b0316816001600160a01b031614155b8015610d905750610d8e8184610826565b155b15610db95760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016104cc565b8115610e015783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610e3e8383836109d1565b610551576001600160a01b038316610e6c57604051637e27328960e01b8152600481018290526024016104cc565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016104cc565b610ea18383610f87565b610551336000858585610b6f565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610eee5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f1a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f3857662386f26fc10000830492506010015b6305f5e1008310610f50576305f5e100830492506008015b6127108310610f6457612710830492506004015b60648310610f76576064830492506002015b600a83106103345760010192915050565b6001600160a01b038216610fb157604051633250574960e11b8152600060048201526024016104cc565b6000610fbf838360006108d8565b90506001600160a01b03811615610551576040516339e3563760e11b8152600060048201526024016104cc565b6001600160e01b03198116811461088f57600080fd5b60006020828403121561101457600080fd5b813561079481610fec565b60005b8381101561103a578181015183820152602001611022565b50506000910152565b6000815180845261105b81602086016020860161101f565b601f01601f19169290920160200192915050565b6020815260006107946020830184611043565b60006020828403121561109457600080fd5b5035919050565b80356001600160a01b03811681146110b257600080fd5b919050565b600080604083850312156110ca57600080fd5b6110d38361109b565b946020939093013593505050565b6000806000606084860312156110f657600080fd5b6110ff8461109b565b925061110d6020850161109b565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561114e5761114e61111d565b604051601f8501601f19908116603f011681019082821181831017156111765761117661111d565b8160405280935085815286868601111561118f57600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126111ba57600080fd5b61079483833560208501611133565b600080604083850312156111dc57600080fd5b82359150602083013567ffffffffffffffff8111156111fa57600080fd5b611206858286016111a9565b9150509250929050565b60006020828403121561122257600080fd5b6107948261109b565b6000806040838503121561123e57600080fd5b6112478361109b565b91506020830135801515811461125c57600080fd5b809150509250929050565b60006020828403121561127957600080fd5b813567ffffffffffffffff81111561129057600080fd5b610a2f848285016111a9565b600080600080608085870312156112b257600080fd5b6112bb8561109b565b93506112c96020860161109b565b925060408501359150606085013567ffffffffffffffff8111156112ec57600080fd5b8501601f810187136112fd57600080fd5b61130c87823560208401611133565b91505092959194509250565b6000806040838503121561132b57600080fd5b6113348361109b565b9150602083013567ffffffffffffffff8111156111fa57600080fd5b6000806040838503121561136357600080fd5b61136c8361109b565b915061137a6020840161109b565b90509250929050565b600181811c9082168061139757607f821691505b6020821081036113b757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610551576000816000526020600020601f850160051c810160208610156113e65750805b601f850160051c820191505b81811015610c91578281556001016113f2565b815167ffffffffffffffff81111561141f5761141f61111d565b6114338161142d8454611383565b846113bd565b602080601f83116001811461146857600084156114505750858301515b600019600386901b1c1916600185901b178555610c91565b600085815260208120601f198616915b8281101561149757888601518255948401946001909101908401611478565b50858210156114b55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000600182016114e557634e487b7160e01b600052601160045260246000fd5b5060010190565b600083516114fe81846020880161101f565b83519083019061151281836020880161101f565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061154e90830184611043565b9695505050505050565b60006020828403121561156a57600080fd5b815161079481610fec56fea26469706673582212203080f2b248a2063a81d57c88f8e058c59b70a7df0b45f7f1605f09a2eeb5f0f864736f6c63430008180033";

type FighterBrainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FighterBrainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FighterBrain__factory extends ContractFactory {
  constructor(...args: FighterBrainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FighterBrain & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FighterBrain__factory {
    return super.connect(runner) as FighterBrain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FighterBrainInterface {
    return new Interface(_abi) as FighterBrainInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FighterBrain {
    return new Contract(address, _abi, runner) as unknown as FighterBrain;
  }
}
