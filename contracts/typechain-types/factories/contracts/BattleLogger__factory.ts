/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BattleLogger,
  BattleLoggerInterface,
} from "../../contracts/BattleLogger";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fighterA",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "fighterB",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "battleHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "BattleRecorded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fighterA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fighterB",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "battleHash",
        type: "bytes32",
      },
    ],
    name: "recordBattle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060ec8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063715814bc14602d575b600080fd5b603c6038366004608b565b603e565b005b6040805182815267ffffffffffffffff421660208201523391849186917f23c18d64cdc4ec7c60d59ad54468fd91eaf701eeebe2f6720e230460c28bc6eb910160405180910390a4505050565b600080600060608486031215609f57600080fd5b50508135936020830135935060409092013591905056fea26469706673582212202fd101b2de49f60bfa883b6f350ad578c03d7c7253f083f25d781c6bfe689e9f64736f6c63430008180033";

type BattleLoggerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BattleLoggerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BattleLogger__factory extends ContractFactory {
  constructor(...args: BattleLoggerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BattleLogger & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BattleLogger__factory {
    return super.connect(runner) as BattleLogger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BattleLoggerInterface {
    return new Interface(_abi) as BattleLoggerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BattleLogger {
    return new Contract(address, _abi, runner) as unknown as BattleLogger;
  }
}
